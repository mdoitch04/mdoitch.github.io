{
  "hash": "572ce288342ea80e5c1bb5c953ad6da0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Open Ended Analysis\"\nauthor: \"Maya Doitch\"\ndate: \"2024-06-02\"\ncategories: [code]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nnp <- read_csv(\"national_park_trails.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3313 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): name, area_name, city_name, state_name, country_name, _geoloc, rou...\ndbl  (8): trail_id, popularity, length, elevation_gain, difficulty_rating, v...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n# The Data {-}\n\nThe dataset for this exam concerns hiking trails in America’s National Parks system. The data are taken from the AllTrails app, which allows users to input new trails and rate existing ones.\n\nVariables in the dataset are:\n\n+ `trail_id`: ID number for the trail\n+ `name`: name of the trail\n+ `area_name`: National Park where the trial is located\n+ `city_name`: city where the trail is located\n+ `state_name`: state where the trail is located\n+ `country_name`: country where the trail is located\n+ `_geoloc`: latitude and longitude of the trail\n+ `popularity`: how often the trail is used (score from 0 to 100)\n+ `length`: distance covered by the trail (in meters)\n+ `elevation_gain`: amount of uphill on the trail (in meters)\n+ `difficulty_rating`: average user rating of trail difficulty\n+ `route_type`: type of trail (loop, out and back, or point to point)\n+ `visitor_usage`: (Honestly, I’m not sure what this one is.)\n+ `avg_rating`: average visitor rating of the trail (1 to 5 stars)\n+ `num_reviews`: total number of reviews for the trail\n+ `features`: notable elements of the trail\n+ `activities`: common uses for the trail\n+ `units`: This variable is a lie -- all the lengths are in meters!\n\n# Part 2: Short Answer [50 points]\n\n1. (4 pts)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnp |> \n  filter(avg_rating == 5) |> \n  group_by(state_name) |>\n  summarize(num_trails = n()) |> \n  select(state_name, num_trails) |> \n  slice_max(n = 1, order_by = num_trails)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  state_name num_trails\n  <chr>           <int>\n1 California        144\n```\n\n\n:::\n:::\n\n\n2. (5 pts)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnp |> \n  filter(state_name == \"Alaska\" ) |> \n  select(name, length) |> \n  slice_max(n = 3, order_by = length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  name                            length\n  <chr>                            <dbl>\n1 Stampede Trail to Sushana River 61477.\n2 Triple Lakes Trail              29773.\n3 Point Gustavus                  20117.\n```\n\n\n:::\n:::\n\n\n3. (5 pts) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnp |> \n  filter(elevation_gain < 500) |> \n  group_by(area_name) |> \n  slice_max(n = 1, order_by = popularity) |> \n  select(area_name, name, popularity)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 3\n# Groups:   area_name [60]\n   area_name                                  name                    popularity\n   <chr>                                      <chr>                        <dbl>\n 1 Acadia National Park                       The Beehive Loop Trail       43.9 \n 2 Arches National Park                       Delicate Arch Trail          63.7 \n 3 Badlands National Park                     Notch Trail                  24.5 \n 4 Big Bend National Park                     Lost Mine Trail              28.6 \n 5 Biscayne National Park                     Biscayne National Park…       5.89\n 6 Black Canyon of the Gunnison National Park Warner Point Nature Tr…      16.3 \n 7 Bryce Canyon National Park                 Navajo Loop and Queen'…      52.0 \n 8 Canyonlands National Park                  Mesa Arch Trail              36.2 \n 9 Capitol Reef National Park                 Hickman Bridge Trail         30.0 \n10 Carlsbad Caverns National Park             Carlsbad Caverns Natio…      15.2 \n# ℹ 50 more rows\n```\n\n\n:::\n:::\n\n\n4. (5 pts) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnp |> \n  filter(str_detect(area_name, \"Land|land\")) |> \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1   109\n```\n\n\n:::\n:::\n\n\n5. (5 pts)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n clean <- np |> \n  filter(num_reviews >= 15, \n         area_name %in% c(\"Glacier National Park\", \"Great Smoky Mountains National Park\"))|> \n  select(difficulty_rating, avg_rating, area_name)\n\n\n  clean |> \n  ggplot(aes\n         (x=difficulty_rating,\n          fill = factor(avg_rating))\n         )+\n   geom_bar(position = \"fill\", na.rm = TRUE, width = 1.5)+\n  facet_wrap(~ area_name, ncol = 3)+\n  scale_fill_brewer(palette = \"green\", name = \"Avg. Quality\", labels = c(\"3.5\", \"4\", \"4.5\", \"5\"))+\n    scale_x_continuous(breaks = c(1, 3, 5, 7)) +\n    facet_wrap(area_name ~.)+\n    labs(\n      x = \"Difficulty Level\",\n      subtitle = \"(For trails with at least 15 reviews)\",\n      y = \"\",\n      title = \"Relationship between Trail Difficulty and Quality\"\n    )+ \n    theme(plot.subtitle = element_text(size = 7))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown palette: \"green\"\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n6. (10 pts)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecommend_trails <- function(data, park_name, min_elev = 0, \n                             max_elev = Inf, min_rating = 0, trl_type = NULL){\n  stopifnot(is.data.frame(data),\n            is.numeric(min_elev),\n            is.numeric(max_elev),\n            is.numeric(min_rating))\n\n  \n  recommended_trails <- data |>\n    filter(area_name == park_name,\n           elevation_gain >= min_elev,\n           elevation_gain <= max_elev,\n           avg_rating >= min_rating) \n  \n  if (!missing(trl_type)) {\n    recommended_trails <- recommended_trails |>\n      filter(route_type %in% trl_type)\n}\n  \n  recommended_trails <- recommended_trails |>\n    select(name)\n  \n  return(recommended_trails)\n}\n```\n:::\n\n\nInclude the following code to show your function works:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnp |> \n  recommend_trails(\"Haleakala National Park\", \n                   min_elev = 1000, \n                   min_rating = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n  name                                \n  <chr>                               \n1 Silversword Loop Via Halemau'u Trail\n2 Keonehe'ehe'e Trail                 \n3 Kaupo Trail                         \n```\n\n\n:::\n:::\n\n\n7. (10 pts) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_dfr(.x = c(\"Sequoia National Park\",\n               \"Joshua Tree National Park\",\n               \"Lassen Volcanic National Park\",\n               \"Kings Canyon National Park\",\n               \"Pinnacles National Park\",\n               \"Death Valley National Park\",\n               \"Redwood National Park\"),\n        ~recommend_trails(data = np,\n                          park_name = .x,\n                          min_elev = 1000,\n                          max_elev = 3000,\n                          min_rating = 4.5,\n                          trl_type = \"loop\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 1\n  name                                                                          \n  <chr>                                                                         \n1 Mineral King to Little Five Lakes Trail                                       \n2 Mineral King: Black Rock Pass Loop                                            \n3 Butte Lake, Snag Lake, Twin Lake, Silver Lake Loop                            \n4 Summit Lake, Horshoe Lake, Snag Lake, Cinder Cone, Twin Lakes, and Echo Lake …\n5 Rae Lakes Trail                                                               \n6 Palisade Basin                                                                \n7 North Lake Loop via Lamarck Col and Alpine Col                                \n8 Cottonwood-Marble Canyon Loop                                                 \n```\n\n\n:::\n:::\n\n\n# Part 3: Statistical Modeling [25 points]\n\nThe two oldest National Parks in the country are **Yosemite National Park** and **Yellowstone National Park**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nold_np <- np |> \n  filter(area_name %in% c(\"Yosemite National Park\",\n                          \"Yellowstone National Park\"))\n```\n:::\n\n\nHow different are these parks? Let’s find out!\n\n8. (5 pts) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nold_np |>\n  group_by(area_name, route_type) |> \n  summarize(average_length = mean(length, na.rm = TRUE)) %>%\n  pivot_wider(names_from = area_name, values_from = average_length)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'area_name'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  route_type     `Yellowstone National Park` `Yosemite National Park`\n  <chr>                                <dbl>                    <dbl>\n1 loop                                17205.                   33120.\n2 out and back                        15812.                   16729.\n3 point to point                      43194.                   55434.\n```\n\n\n:::\n:::\n\nYosemite National Park has a longer trail length for each trail type, on average, than Yellowstone National Park does. Yosemite's average trail length for the loop trail type is almost double Yellowstone's.  \n\n\n9. \n\n    a. (6 pts)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nold_np |> \n  ggplot(aes(x = length, y = elevation_gain, color = area_name)) +\n  geom_point() +\n  theme_bw() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\")+\n  labs (x= \"Length\",\n        y = \"Elevation gain\",\n        color = \"National Park\",\n        title = \"Linear Regression Models of Elevation Gain from Trail Length\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n    b. (4 pts)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyellowstone <- lm(elevation_gain ~length,\n                  data = subset(np, area_name == \"Yellowstone National Park\"))\n\nyosemite <- lm(elevation_gain ~length,\n                  data = subset(np, area_name == \"Yosemite National Park\"))\n```\n:::\n\n\n    c. (4 pts)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\ntidy(yellowstone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept) 112.     28.3           3.94 1.09e- 4\n2 length        0.0155  0.000808     19.2  1.83e-49\n```\n\n\n:::\n\n```{.r .cell-code}\ntidy(yosemite)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)  15.3    32.6          0.470 6.39e-  1\n2 length        0.0406  0.000713    56.9   2.70e-141\n```\n\n\n:::\n:::\n\n\n    d. (3 pts)\n\nThe average steepness of a trail in Yellowstone is 0.0155 meters gained per meter covered. The average steepness of a trail in Yosemite is 0.0406 meters gained per meter covered. \n\n    e. (3 pts)\nTrails in Yosemite national park tend to have a higher trail steepness than trails in Yellowstone. Since the coefficient is larger for trails in Yosemite (0.0406) than for trails in Yellowstone(0.0155), Yosemite trails have a steeper average elevation gain per meter climbed compared to Yellowstone trails. Also, in the graph above, the blue dots (Yosemite) are also higher than the red dots (Yellowstone). Therefore, the parks do tend to have different trail steepness. \n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}